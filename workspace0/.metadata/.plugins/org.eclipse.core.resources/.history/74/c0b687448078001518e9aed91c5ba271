/*
 * expression.cpp
 *
 *  Created on: Oct 21, 2015
 *      Author: user
 */

//given array of nonnegative
//integers and a target integer, find the number of
//ways you can make the target integer using all the integers from the array and in
//the same sequence. you are only allowed to use + or operator
//between two elements

#include <iostream>
#include<vector>
#include<climits>
#include<string>
#include<algorithm>
#include<vector>
#include<ctime>   //for isUpper
#include<map>
using namespace std;
bool checkIfEqual(char expr[],int sum,int size){
	int calculation=0;
	cout<<"...Expression..."<<endl;
	int i=0;
	while(expr[i]){
		cout<<expr[i];
	i++;
	}
	i=0;
	while(expr[i]){
		if(expr[i]=='+'){
			int res=0;
			while(expr[i] && (expr[i+1]!='+'&& expr[i+1]!='-')){
				res=res*10+(expr[i+1]-'0');
				i++;
				cout<<"res "<<res<<" i is "<<i<<endl;
			}
			calculation+=res;
			i++;
		}
		else if(expr[i]=='-'){
			int res=0;
			while(expr[i]&& (expr[i+1]!='+'&& expr[i+1]!='-')){
				res=res*10+expr[i+1]-'0';
				i++;
			}
			calculation-=res;
			i++;
		}
	}
	cout<<"calculation is "<<calculation<<endl;
	if(calculation==sum){
		return true;
	}
	return false;
}
void expression(int arr[],char expr[],int a_indx,int e_indx,int end,int sum){
	if(a_indx==end){
		expr[e_indx]='\0';

		cout<<"Calculating ..."<<checkIfEqual(expr,sum,2*end)<<endl;
		cout<<endl;
		return;
	}

	expr[e_indx]='+';
	int tmp=arr[a_indx];

	int res=0;
	string digit;
	int tmp_e_indx=e_indx;
	while(tmp){
		int n=tmp%10;
		//res=res*10+n;
		tmp=tmp/10;
		digit+=n+'0';
	}
	reverse(digit.begin(),digit.end());
	for(int i=0;i<digit.length();i++){
		tmp_e_indx++;
		expr[tmp_e_indx]=digit[i];
	}

	expression(arr,expr,a_indx+1,tmp_e_indx+1,end,sum);

	expr[e_indx]='-';
	tmp_e_indx=e_indx;
	for(int i=0;i<digit.length();i++){
			tmp_e_indx++;
			expr[tmp_e_indx]=digit[i];
		}

	expression(arr,expr,a_indx+1,tmp_e_indx+1,end,sum);
}


int main(){
	int arr[]={10,165,5};
	int sum=180;
	int size=sizeof(arr)/sizeof(arr[0]);
	char expr[10000];
	expression(arr,expr,0,0,size,sum);
}
