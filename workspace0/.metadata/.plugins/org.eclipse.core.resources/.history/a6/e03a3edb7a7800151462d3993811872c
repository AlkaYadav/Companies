/*
 * expression.cpp
 *
 *  Created on: Oct 21, 2015
 *      Author: user
 */

//given array of nonnegative
//integers and a target integer, find the number of
//ways you can make the target integer using all the integers from the array and in
//the same sequence. you are only allowed to use + or operator
//between two elements

#include <iostream>
#include<vector>
#include<climits>
#include<string>
#include<algorithm>
#include<vector>
#include<ctime>   //for isUpper
#include<map>
using namespace std;
bool checkIfEqual(char expr[],int sum,int size){
	int calculation=0;
	cout<<"Expression is "<<endl;
	for(int i=0;i<size;i++){
		cout<<expr[i];
	}
	for(int i=0;i<size;i++){
		if(expr[i]=='+'){
			calculation+=expr[i+1]-'0';
			i++;
		}
		else if(expr[i]=='-'){
			calculation-=expr[i+1]-'0';
			i++;
		}
	}

	if(calculation==sum){
		return true;
	}
	return false;
}
void expression(int arr[],char expr[],int a_indx,int e_indx,int end,int sum){
	if(a_indx==end){
		expr[e_indx]='\0';
		cout<<"Check expression f equal sum"<<endl;
		cout<<"Calculating ..."<<checkIfEqual(expr,sum,2*end)<<endl;
		cout<<endl;
		return;
	}
	expr[e_indx]='+';
	expr[e_indx+1]=arr[a_indx]+'0';
	expression(arr,expr,a_indx+1,e_indx+2,end,sum);

	expr[e_indx]='-';
	expr[e_indx+1]=arr[a_indx]+'0';
	expression(arr,expr,a_indx+1,e_indx+2,end,sum);
}


int main(){
	int arr[]={10,5,5};
	int sum=20;
	int size=sizeof(arr)/sizeof(arr[0]);
	char expr[2*size+1];
	expression(arr,expr,0,0,size,sum);
}
